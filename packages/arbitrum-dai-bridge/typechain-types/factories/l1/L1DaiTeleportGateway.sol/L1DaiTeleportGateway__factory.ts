/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  L1DaiTeleportGateway,
  L1DaiTeleportGatewayInterface,
} from "../../../l1/L1DaiTeleportGateway.sol/L1DaiTeleportGateway";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2TeleportGateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_inbox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1Escrow",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1TeleportRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "seqNum",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "TxToL2",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "targetDomain",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "daiToFlush",
        type: "uint256",
      },
    ],
    name: "finalizeFlush",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "sourceDomain",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "targetDomain",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "receiver",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "operator",
            type: "bytes32",
          },
          {
            internalType: "uint128",
            name: "amount",
            type: "uint128",
          },
          {
            internalType: "uint80",
            name: "nonce",
            type: "uint80",
          },
          {
            internalType: "uint48",
            name: "timestamp",
            type: "uint48",
          },
        ],
        internalType: "struct TeleportGUID",
        name: "teleport",
        type: "tuple",
      },
    ],
    name: "finalizeRegisterTeleport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "contract IInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1Escrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1TeleportRouter",
    outputs: [
      {
        internalType: "contract IL1TeleportRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1Token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2TeleportGateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type L1DaiTeleportGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1DaiTeleportGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1DaiTeleportGateway__factory extends ContractFactory {
  constructor(...args: L1DaiTeleportGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _l1Token: PromiseOrValue<string>,
    _l2TeleportGateway: PromiseOrValue<string>,
    _inbox: PromiseOrValue<string>,
    _l1Escrow: PromiseOrValue<string>,
    _l1TeleportRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L1DaiTeleportGateway> {
    return super.deploy(
      _l1Token,
      _l2TeleportGateway,
      _inbox,
      _l1Escrow,
      _l1TeleportRouter,
      overrides || {}
    ) as Promise<L1DaiTeleportGateway>;
  }
  override getDeployTransaction(
    _l1Token: PromiseOrValue<string>,
    _l2TeleportGateway: PromiseOrValue<string>,
    _inbox: PromiseOrValue<string>,
    _l1Escrow: PromiseOrValue<string>,
    _l1TeleportRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _l1Token,
      _l2TeleportGateway,
      _inbox,
      _l1Escrow,
      _l1TeleportRouter,
      overrides || {}
    );
  }
  override attach(address: string): L1DaiTeleportGateway {
    return super.attach(address) as L1DaiTeleportGateway;
  }
  override connect(signer: Signer): L1DaiTeleportGateway__factory {
    return super.connect(signer) as L1DaiTeleportGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1DaiTeleportGatewayInterface {
    return new utils.Interface(_abi) as L1DaiTeleportGatewayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1DaiTeleportGateway {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as L1DaiTeleportGateway;
  }
}
