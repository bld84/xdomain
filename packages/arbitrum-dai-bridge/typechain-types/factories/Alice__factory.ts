/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Alice, AliceInterface } from "../Alice";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dai",
        type: "address",
      },
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101803803806101808339818101604052604081101561003357600080fd5b8101908080519060200190929190805190602001909291905050508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156100f557600080fd5b505af1158015610109573d6000803e3d6000fd5b505050506040513d602081101561011f57600080fd5b8101908080519060200190929190505050505050603f806101416000396000f3fe6080604052600080fdfea2646970667358221220be12fbd20388dfc6e05d747e3a3f9ec532fc4082dd19de7167c371006bdecfb364736f6c634300060b0033";

type AliceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AliceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Alice__factory extends ContractFactory {
  constructor(...args: AliceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    dai: string,
    usr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Alice> {
    return super.deploy(dai, usr, overrides || {}) as Promise<Alice>;
  }
  getDeployTransaction(
    dai: string,
    usr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(dai, usr, overrides || {});
  }
  attach(address: string): Alice {
    return super.attach(address) as Alice;
  }
  connect(signer: Signer): Alice__factory {
    return super.connect(signer) as Alice__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AliceInterface {
    return new utils.Interface(_abi) as AliceInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Alice {
    return new Contract(address, _abi, signerOrProvider) as Alice;
  }
}
