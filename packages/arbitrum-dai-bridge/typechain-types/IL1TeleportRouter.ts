/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export type TeleportGUIDStruct = {
  sourceDomain: BytesLike;
  targetDomain: BytesLike;
  receiver: BytesLike;
  operator: BytesLike;
  amount: BigNumberish;
  nonce: BigNumberish;
  timestamp: BigNumberish;
};

export type TeleportGUIDStructOutput = [
  string,
  string,
  string,
  string,
  BigNumber,
  BigNumber,
  number
] & {
  sourceDomain: string;
  targetDomain: string;
  receiver: string;
  operator: string;
  amount: BigNumber;
  nonce: BigNumber;
  timestamp: number;
};

export interface IL1TeleportRouterInterface extends utils.Interface {
  functions: {
    "requestMint((bytes32,bytes32,bytes32,bytes32,uint128,uint80,uint48),uint256,uint256)": FunctionFragment;
    "settle(bytes32,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "requestMint",
    values: [TeleportGUIDStruct, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "settle",
    values: [BytesLike, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "requestMint",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "settle", data: BytesLike): Result;

  events: {};
}

export interface IL1TeleportRouter extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IL1TeleportRouterInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    requestMint(
      teleportGUID: TeleportGUIDStruct,
      maxFeePercentage: BigNumberish,
      operatorFee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    settle(
      targetDomain: BytesLike,
      batchedDaiToFlush: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  requestMint(
    teleportGUID: TeleportGUIDStruct,
    maxFeePercentage: BigNumberish,
    operatorFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  settle(
    targetDomain: BytesLike,
    batchedDaiToFlush: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    requestMint(
      teleportGUID: TeleportGUIDStruct,
      maxFeePercentage: BigNumberish,
      operatorFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { postFeeAmount: BigNumber; totalFee: BigNumber }
    >;

    settle(
      targetDomain: BytesLike,
      batchedDaiToFlush: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    requestMint(
      teleportGUID: TeleportGUIDStruct,
      maxFeePercentage: BigNumberish,
      operatorFee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    settle(
      targetDomain: BytesLike,
      batchedDaiToFlush: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    requestMint(
      teleportGUID: TeleportGUIDStruct,
      maxFeePercentage: BigNumberish,
      operatorFee: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    settle(
      targetDomain: BytesLike,
      batchedDaiToFlush: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
